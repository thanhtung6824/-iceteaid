a43aea4920c08895713808fac66e24b9










'use strict';

var _ReactNativeViewViewConfig = _interopRequireDefault(require("../Components/View/ReactNativeViewViewConfig"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}


var ImageViewViewConfig = {
  uiViewClassName: 'RCTImageView',
  bubblingEventTypes: {},
  directEventTypes: {
    topLoadStart: {
      registrationName: 'onLoadStart' },

    topProgress: {
      registrationName: 'onProgress' },

    topError: {
      registrationName: 'onError' },

    topPartialLoad: {
      registrationName: 'onPartialLoad' },

    topLoad: {
      registrationName: 'onLoad' },

    topLoadEnd: {
      registrationName: 'onLoadEnd' } },


  validAttributes: _objectSpread(_objectSpread({},
  _ReactNativeViewViewConfig.default.validAttributes), {}, {
    blurRadius: true,

    capInsets: { diff: require('../Utilities/differ/insetsDiffer') },
    defaultSource: {
      process: require('./resolveAssetSource') },

    defaultSrc: true,
    fadeDuration: true,
    headers: true,
    loadingIndicatorSrc: true,
    onError: true,
    onLoad: true,
    onLoadEnd: true,
    onLoadStart: true,
    onPartialLoad: true,
    onProgress: true,
    overlayColor: { process: require('../StyleSheet/processColor') },
    progressiveRenderingEnabled: true,
    resizeMethod: true,
    resizeMode: true,
    shouldNotifyLoadEvents: true,
    source: true,
    src: true,
    tintColor: { process: require('../StyleSheet/processColor') } }) };



module.exports = ImageViewViewConfig;
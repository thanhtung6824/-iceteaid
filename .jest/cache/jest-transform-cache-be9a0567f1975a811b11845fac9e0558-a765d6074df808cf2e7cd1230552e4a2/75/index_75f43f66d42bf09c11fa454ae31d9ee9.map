{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/src/api/user/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseApi } from '../base-api';\nimport { RequestType, ReturnType } from 'iceteaid-type';\nimport { missingParameter, queryBuilder } from '../..';\n\nexport class UserApi extends BaseApi {\n    public generateEncryptionKey(): ReturnType<any> {\n        const payload = queryBuilder(RequestType.GENERATE_ENCRYPTION_KEY, {});\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public encryptKey(privateKey: string, encryptionKey: string, mnemonic?: string): ReturnType<any> {\n        if (!privateKey) {\n            throw missingParameter('PRIVATE_KEY');\n        }\n        if (!encryptionKey) {\n            throw missingParameter('ENCRYPTION_KEY');\n        }\n        const payload = queryBuilder(RequestType.ENCRYPT_KEY, { privateKey, encryptionKey, mnemonic: mnemonic || '' });\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public decryptKey(privateKey: string, encryptionKey: string, mnemonic?: string): ReturnType<any> {\n        if (!privateKey) {\n            throw missingParameter('PRIVATE_KEY');\n        }\n        if (!encryptionKey) {\n            throw missingParameter('ENCRYPTION_KEY');\n        }\n        const payload = queryBuilder(RequestType.DECRYPT_KEY, { privateKey, encryptionKey, mnemonic: mnemonic || '' });\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public getKey(): ReturnType<any> {\n        const payload = queryBuilder(RequestType.GET_KEY, {});\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public updateInfo(displayName?: string, fullName?: string): ReturnType<any> {\n        if (!displayName && !fullName) {\n            throw missingParameter('AT_LEAST_ONE_PARAMETER');\n        }\n        const payload = queryBuilder(RequestType.UPDATE_INFO, { displayName, fullName });\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public getMetaData(): ReturnType<any> {\n        const payload = queryBuilder(RequestType.GET_META_DATA, {});\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public getDataAfterRedirect(): ReturnType<any> {\n        const payload = queryBuilder(RequestType.WEB_GET_DATA_AFTER_REDIRECT, {});\n        return this.transporter.post(this.iframe, payload);\n    }\n}"]}
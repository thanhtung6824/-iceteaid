{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/test/provider/transporter.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @jest-environment jsdom\n */\n\nimport { createTestIframe, createTestTransporter } from '../mocks';\nimport { queryBuilder } from '../../src';\nimport { RequestType } from 'iceteaid-type';\n\nconst createResponse = (id: string) => {\n    return {\n        id,\n        payload: { err: false, msg: 'Im a response' }\n    };\n};\n\nit ('Will post message', async () => {\n    const transporter = createTestTransporter();\n    const iframe = createTestIframe();\n    const payload = queryBuilder('TEST_REQUEST' as RequestType, { msg: 'Hey! Im test' });\n    transporter.post(iframe, payload);\n    await iframe.isReady();\n\n    expect(iframe.postMessage).toBeCalledWith(JSON.stringify(payload));\n});\n\nit ('Throw message if have error', async () => {\n    const transporter = createTestTransporter();\n    const iframe = createTestIframe();\n    const payload = queryBuilder('TEST_REQUEST' as RequestType, { msg: 'Hey! Im test' });\n    const promise = transporter.post(iframe, payload);\n    await iframe.isReady();\n    transporter.on(JSON.stringify({ id: payload.id, payload: { err: true, msg: 'What! Error' } }));\n    await expect(promise).rejects.toStrictEqual({ id: payload.id, payload: { err: true, msg: 'What! Error' } });\n    expect(transporter.messageHandlers.get(payload.id)).toBe(undefined);\n});\n//\nit ('Ignore message if difference id', async () => {\n    const transporter = createTestTransporter();\n    const iframe = createTestIframe();\n    const payload = queryBuilder('TEST_REQUEST' as RequestType, { msg: 'Hey! Im test' });\n    transporter.post(iframe, payload);\n    await iframe.isReady();\n    transporter.on(JSON.stringify(createResponse('abc')));\n    expect(transporter.messageHandlers.keys().next().value).toEqual(payload.id);\n    expect(transporter.messageHandlers.values().next().value._value).toEqual('');\n});\n\nit ('Will receive message', async () => {\n    const transporter = createTestTransporter();\n    const iframe = createTestIframe();\n    const payload = queryBuilder('TEST_REQUEST' as RequestType, { msg: 'Hey! Im test' });\n    const promise = transporter.post(iframe, payload);\n    await iframe.isReady();\n    transporter.on(JSON.stringify(createResponse(payload.id)));\n    await expect(promise).resolves.toStrictEqual(createResponse(payload.id));\n    expect(transporter.messageHandlers.get(payload.id)).toBe(undefined);\n});\n"]}
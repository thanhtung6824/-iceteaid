{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/src/provider/sdk.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAGA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,IAAA,OAAA;AAAA;AAAA,YAAA;AAWI,WAAA,OAAA,CAAY,MAAZ,EAA0B;AACtB,QAAI,CAAC,MAAL,EAAa;AACT,YAAM,mBAAA,CAAA,kBAAA,EAAN;AACH;;AACD,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,QAAL,GAAgB,OAAA,CAAA,gBAAA,CAAiB,OAAjC;AACA,SAAK,IAAL,GAAY,IAAI,MAAA,CAAA,OAAJ,CAAY,IAAZ,CAAZ;AACA,SAAK,IAAL,GAAY,IAAI,MAAA,CAAA,OAAJ,CAAY,IAAZ,CAAZ;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,IAAI,CAAC,SAAL,CAAe;AAC7B,MAAA,MAAM,EAAE,MADqB;AAE7B,MAAA,MAAM,EAAE,OAAA,CAAA,gBAAA,CAAiB,MAFI;AAG7B,MAAA,OAAO,EAAE,OAAA,CAAA,gBAAA,CAAiB;AAHG,KAAf,CAAD,CAAjB;AAMA,IAAA,OAAO,CAAC,QAAR,GAAmB,IAAnB;AACH;;AAEa,EAAA,OAAA,CAAA,WAAA,GAAd,UAA0B,MAA1B,EAAwC;AACpC,QAAI,CAAC,OAAO,CAAC,QAAb,EAAuB;AACnB,MAAA,OAAO,CAAC,QAAR,GAAmB,IAAI,OAAJ,CAAY,MAAZ,CAAnB;AACH;;AACD,WAAO,OAAO,CAAC,QAAf;AACH,GALa;;AAOd,EAAA,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;SAAtB,YAAA;AACI,UAAI,CAAC,OAAO,CAAC,UAAR,CAAmB,GAAnB,CAAuB,KAAK,KAA5B,CAAL,EAAyC;AACrC,QAAA,OAAO,CAAC,UAAR,CAAmB,GAAnB,CACI,KAAK,KADT,EAEI,IAAI,OAAA,CAAA,gBAAA,CAAiB,WAArB,CAAiC,KAAK,QAAtC,CAFJ;AAIH;;AACD,aAAoB,OAAO,CAAC,UAAR,CAAmB,GAAnB,CAAuB,KAAK,KAA5B,CAApB;AACH,KARqB;qBAAA;;AAAA,GAAtB;AAUA,EAAA,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,YAAA;AACI,UAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,KAAK,KAAzB,CAAL,EAAsC;AAClC,QAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CACI,KAAK,KADT,EAEI,IAAI,OAAA,CAAA,gBAAA,CAAiB,MAArB,CAA4B,KAAK,QAAjC,EAA2C,KAAK,KAAhD,EAAuD,KAAK,WAA5D,CAFJ;AAIH;;AACD,aAAe,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,KAAK,KAAzB,CAAf;AACH,KARgB;qBAAA;;AAAA,GAAjB;AA5Ce,EAAA,OAAA,CAAA,UAAA,GAAuC,IAAI,GAAJ,EAAvC;AACA,EAAA,OAAA,CAAA,OAAA,GAA+B,IAAI,GAAJ,EAA/B;AAoDnB,SAAA,OAAA;AAAC,CAtDD,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA;AAiEA,OAAA,CAAA,gBAAA,GAAqC,EAArC;;AAEb,SAAgB,UAAhB,CACI,SADJ,EAEI,aAFJ,EAEmC;AAE/B,EAAA,MAAM,CAAC,MAAP,CAAc,OAAA,CAAA,gBAAd,EAAgC,aAAhC;AACA,SAAO,SAAP;AACH;;AAND,OAAA,CAAA,UAAA,GAAA,UAAA","sourcesContent":["import { missingApiKeyError } from './exception-handler';\nimport { UserApi } from '../api/user';\nimport { Iframe } from './iframe';\nimport { Transporter } from './transporter';\nimport { AuthApi } from '../api/auth';\n\nexport class SdkBase {\n    private static _transport: Map<string, Transporter> = new Map();\n    private static _iframe: Map<string, Iframe> = new Map();\n\n    public readonly sdkId: string;\n    public readonly endpoint: string;\n    public readonly user: UserApi;\n    public readonly auth: AuthApi;\n    private static instance: SdkBase;\n    private readonly apiKey: string\n\n    constructor(apiKey: string) {\n        if (!apiKey) {\n            throw missingApiKeyError();\n        }\n        this.apiKey = apiKey;\n        this.endpoint = SdkConfiguration.baseUrl;\n        this.user = new UserApi(this);\n        this.auth = new AuthApi(this);\n        this.sdkId = btoa(JSON.stringify({\n            apiKey: apiKey,\n            target: SdkConfiguration.target,\n            baseUrl: SdkConfiguration.baseUrl,\n            // origin: window.location.origin,\n        }));\n        SdkBase.instance = this;\n    }\n\n    public static getInstance(apiKey: string): SdkBase {\n        if (!SdkBase.instance) {\n            SdkBase.instance = new SdkBase(apiKey);\n        }\n        return SdkBase.instance;\n    }\n\n    public get transporter(): Transporter {\n        if (!SdkBase._transport.has(this.sdkId)) {\n            SdkBase._transport.set(\n                this.sdkId,\n                new SdkConfiguration.Transporter(this.endpoint)\n            );\n        }\n        return <Transporter>SdkBase._transport.get(this.sdkId);\n    }\n\n    public get iframe(): Iframe {\n        if (!SdkBase._iframe.has(this.sdkId)) {\n            SdkBase._iframe.set(\n                this.sdkId,\n                new SdkConfiguration.Iframe(this.endpoint, this.sdkId, this.transporter)\n            );\n        }\n        return <Iframe>SdkBase._iframe.get(this.sdkId);\n    }\n}\ntype ConstructorOf<C> = { new (...args: any[]): C };\n\ninterface SdkConfiguration {\n    target: 'web' | 'react-native';\n    baseUrl: string;\n    Transporter: ConstructorOf<Transporter>,\n    Iframe: ConstructorOf<Iframe>,\n    Instance?: SdkBase | undefined,\n}\n\nexport const SdkConfiguration: SdkConfiguration = {} as SdkConfiguration;\n\nexport function sdkBuilder<Sdk extends SdkBase>(\n    IceteaSdk: ConstructorOf<Sdk>,\n    configuration: SdkConfiguration,\n): ConstructorOf<Sdk> {\n    Object.assign(SdkConfiguration, configuration);\n    return IceteaSdk;\n}\n"]}
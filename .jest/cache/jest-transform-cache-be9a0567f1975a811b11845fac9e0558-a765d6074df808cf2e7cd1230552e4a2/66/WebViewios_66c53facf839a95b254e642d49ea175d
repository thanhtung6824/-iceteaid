591ee988b1ee875fe52a535bfb2f3dd3
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;



























































var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _invariant = _interopRequireDefault(require("invariant"));
var _WebViewShared = require("./WebViewShared");
var _WebView = _interopRequireDefault(require("./WebView.styles"));var _jsxFileName = "/home/admin1/Desktop/@iceteaid/node_modules/react-native-webview/lib/WebView.ios.js";function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}var __extends = this && this.__extends || function () {var _extendStatics = function extendStatics(d, b) {_extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {d.__proto__ = b;} || function (d, b) {for (var p in b) {if (b.hasOwnProperty(p)) d[p] = b[p];}};return _extendStatics(d, b);};return function (d, b) {_extendStatics(d, b);function __() {this.constructor = d;}d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());};}();var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {function adopt(value) {return value instanceof P ? value : new P(function (resolve) {resolve(value);});}return new (P || (P = Promise))(function (resolve, reject) {function fulfilled(value) {try {step(generator.next(value));} catch (e) {reject(e);}}function rejected(value) {try {step(generator["throw"](value));} catch (e) {reject(e);}}function step(result) {result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);}step((generator = generator.apply(thisArg, _arguments || [])).next());});};var __generator = this && this.__generator || function (thisArg, body) {var _ = { label: 0, sent: function sent() {if (t[0] & 1) throw t[1];return t[1];}, trys: [], ops: [] },f,y,t,g;return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {return this;}), g;function verb(n) {return function (v) {return step([n, v]);};}function step(op) {if (f) throw new TypeError("Generator is already executing.");while (_) {try {if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;if (y = 0, t) op = [op[0] & 2, t.value];switch (op[0]) {case 0:case 1:t = op;break;case 4:_.label++;return { value: op[1], done: false };case 5:_.label++;y = op[1];op = [0];continue;case 7:op = _.ops.pop();_.trys.pop();continue;default:if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {_ = 0;continue;}if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {_.label = op[1];break;}if (op[0] === 6 && _.label < t[1]) {_.label = t[1];t = op;break;}if (t && _.label < t[2]) {_.label = t[2];_.ops.push(op);break;}if (t[2]) _.ops.pop();_.trys.pop();continue;}op = body.call(thisArg, _);} catch (e) {op = [6, e];y = 0;} finally {f = t = 0;}}if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };}};var __rest = this && this.__rest || function (s, e) {var t = {};for (var p in s) {if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];}if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];}return t;};
var UIManager = _reactNative.UIManager;
var resolveAssetSource = _reactNative.Image.resolveAssetSource;
var processDecelerationRate = function processDecelerationRate(decelerationRate) {
  var newDecelerationRate = decelerationRate;
  if (newDecelerationRate === 'normal') {
    newDecelerationRate = 0.998;
  } else
  if (newDecelerationRate === 'fast') {
    newDecelerationRate = 0.99;
  }
  return newDecelerationRate;
};
var RNCWebViewManager = _reactNative.NativeModules.RNCWebViewManager;
var RNCWebView = (0, _reactNative.requireNativeComponent)('RNCWebView');
var WebView = function (_super) {
  __extends(WebView, _super);
  function WebView() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      viewState: _this.props.startInLoadingState ? 'LOADING' : 'IDLE',
      lastErrorEvent: null };

    _this.webViewRef = _react.default.createRef();

    _this.getCommands = function () {return UIManager.getViewManagerConfig('RNCWebView').Commands;};



    _this.goForward = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().goForward, undefined);
    };



    _this.goBack = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().goBack, undefined);
    };



    _this.reload = function () {
      _this.setState({ viewState: 'LOADING' });
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().reload, undefined);
    };



    _this.stopLoading = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().stopLoading, undefined);
    };



    _this.requestFocus = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().requestFocus, undefined);
    };










    _this.postMessage = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().postMessage, [String(data)]);
    };






    _this.injectJavaScript = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().injectJavaScript, [data]);
    };




    _this.updateNavigationState = function (event) {
      if (_this.props.onNavigationStateChange) {
        _this.props.onNavigationStateChange(event.nativeEvent);
      }
    };



    _this.getWebViewHandle = function () {
      var nodeHandle = (0, _reactNative.findNodeHandle)(_this.webViewRef.current);
      (0, _invariant.default)(nodeHandle != null, 'nodeHandle expected to be non-null');
      return nodeHandle;
    };
    _this.onLoadingStart = function (event) {
      var onLoadStart = _this.props.onLoadStart;
      if (onLoadStart) {
        onLoadStart(event);
      }
      _this.updateNavigationState(event);
    };
    _this.onLoadingError = function (event) {
      event.persist();
      var _a = _this.props,onError = _a.onError,onLoadEnd = _a.onLoadEnd;
      if (onLoadEnd) {
        onLoadEnd(event);
      }
      if (onError) {
        onError(event);
      }
      console.warn('Encountered an error loading page', event.nativeEvent);
      _this.setState({
        lastErrorEvent: event.nativeEvent,
        viewState: 'ERROR' });

    };
    _this.onHttpError = function (event) {
      var onHttpError = _this.props.onHttpError;
      if (onHttpError) {
        onHttpError(event);
      }
    };
    _this.onLoadingFinish = function (event) {
      var _a = _this.props,onLoad = _a.onLoad,onLoadEnd = _a.onLoadEnd;
      if (onLoad) {
        onLoad(event);
      }
      if (onLoadEnd) {
        onLoadEnd(event);
      }
      _this.setState({
        viewState: 'IDLE' });

      _this.updateNavigationState(event);
    };
    _this.onMessage = function (event) {
      var onMessage = _this.props.onMessage;
      if (onMessage) {
        onMessage(event);
      }
    };
    _this.onLoadingProgress = function (event) {
      var onLoadProgress = _this.props.onLoadProgress;
      if (onLoadProgress) {
        onLoadProgress(event);
      }
    };
    _this.onShouldStartLoadWithRequestCallback = function (shouldStart, _url, lockIdentifier) {
      var viewManager = _this.props.nativeConfig && _this.props.nativeConfig.viewManager ||
      RNCWebViewManager;
      viewManager.startLoadWithResult(!!shouldStart, lockIdentifier);
    };
    _this.onContentProcessDidTerminate = function (event) {
      var onContentProcessDidTerminate = _this.props.onContentProcessDidTerminate;
      if (onContentProcessDidTerminate) {
        onContentProcessDidTerminate(event);
      }
    };
    return _this;
  }
  WebView.prototype.componentDidUpdate = function (prevProps) {
    this.showRedboxOnPropChanges(prevProps, 'allowsInlineMediaPlayback');
    this.showRedboxOnPropChanges(prevProps, 'incognito');
    this.showRedboxOnPropChanges(prevProps, 'mediaPlaybackRequiresUserAction');
    this.showRedboxOnPropChanges(prevProps, 'dataDetectorTypes');
  };
  WebView.prototype.showRedboxOnPropChanges = function (prevProps, propName) {
    if (this.props[propName] !== prevProps[propName]) {
      console.error("Changes to property " + propName + " do nothing after the initial render.");
    }
  };
  WebView.prototype.render = function () {
    var _a = this.props,decelerationRateProp = _a.decelerationRate,_b = _a.nativeConfig,nativeConfig = _b === void 0 ? {} : _b,onMessage = _a.onMessage,onShouldStartLoadWithRequestProp = _a.onShouldStartLoadWithRequest,originWhitelist = _a.originWhitelist,renderError = _a.renderError,renderLoading = _a.renderLoading,_c = _a.injectedJavaScriptForMainFrameOnly,injectedJavaScriptForMainFrameOnly = _c === void 0 ? true : _c,_d = _a.injectedJavaScriptBeforeContentLoadedForMainFrameOnly,injectedJavaScriptBeforeContentLoadedForMainFrameOnly = _d === void 0 ? true : _d,style = _a.style,containerStyle = _a.containerStyle,otherProps = __rest(_a, ["decelerationRate", "nativeConfig", "onMessage", "onShouldStartLoadWithRequest", "originWhitelist", "renderError", "renderLoading", "injectedJavaScriptForMainFrameOnly", "injectedJavaScriptBeforeContentLoadedForMainFrameOnly", "style", "containerStyle"]);
    var otherView = null;
    if (this.state.viewState === 'LOADING') {
      otherView = (renderLoading || _WebViewShared.defaultRenderLoading)();
    } else
    if (this.state.viewState === 'ERROR') {
      var errorEvent = this.state.lastErrorEvent;
      (0, _invariant.default)(errorEvent != null, 'lastErrorEvent expected to be non-null');
      otherView = (renderError || _WebViewShared.defaultRenderError)(errorEvent.domain, errorEvent.code, errorEvent.description);
    } else
    if (this.state.viewState !== 'IDLE') {
      console.error("RNCWebView invalid state encountered: " + this.state.viewState);
    }
    var webViewStyles = [_WebView.default.container, _WebView.default.webView, style];
    var webViewContainerStyle = [_WebView.default.container, containerStyle];
    var onShouldStartLoadWithRequest = (0, _WebViewShared.createOnShouldStartLoadWithRequest)(this.onShouldStartLoadWithRequestCallback,

    originWhitelist, onShouldStartLoadWithRequestProp);
    var decelerationRate = processDecelerationRate(decelerationRateProp);
    var NativeWebView = nativeConfig.component ||
    RNCWebView;
    var webView = _react.default.createElement(NativeWebView, _extends({ key: "webViewKey" }, otherProps, { decelerationRate: decelerationRate, messagingEnabled: typeof onMessage === 'function', onLoadingError: this.onLoadingError, onLoadingFinish: this.onLoadingFinish, onLoadingProgress: this.onLoadingProgress, onFileDownload: this.props.onFileDownload, onLoadingStart: this.onLoadingStart, onHttpError: this.onHttpError, onMessage: this.onMessage, onScroll: this.props.onScroll, onShouldStartLoadWithRequest: onShouldStartLoadWithRequest, onContentProcessDidTerminate: this.onContentProcessDidTerminate, injectedJavaScript: this.props.injectedJavaScript, injectedJavaScriptBeforeContentLoaded: this.props.injectedJavaScriptBeforeContentLoaded, injectedJavaScriptForMainFrameOnly: injectedJavaScriptForMainFrameOnly, injectedJavaScriptBeforeContentLoadedForMainFrameOnly: injectedJavaScriptBeforeContentLoadedForMainFrameOnly, ref: this.webViewRef,

      source: resolveAssetSource(this.props.source), style: webViewStyles }, nativeConfig.props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 260, columnNumber: 24 } }));
    return _react.default.createElement(_reactNative.View, { style: webViewContainerStyle, __self: this, __source: { fileName: _jsxFileName, lineNumber: 263, columnNumber: 17 } },
    webView,
    otherView);

  };
  WebView.defaultProps = {
    javaScriptEnabled: true,
    cacheEnabled: true,
    originWhitelist: _WebViewShared.defaultOriginWhitelist,
    useSharedProcessPool: true };

  WebView.isFileUploadSupported = function () {return __awaiter(void 0, void 0, void 0, function () {
      return __generator(this, function (_a) {

        return [2, true];
      });
    });};
  return WebView;
}(_react.default.Component);var _default =
WebView;exports.default = _default;
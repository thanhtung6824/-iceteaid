{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/react-native/test/native-iframe.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport React from 'react';\nimport { createNativeIframe } from './mocks';\nimport { Platform } from 'react-native';\nimport { act, render } from '@testing-library/react-native';\nimport { randomId, subjectBuilder } from 'iceteaid-core';\nimport { BASE_URL } from './constants';\njest.useFakeTimers();\n\ndescribe('Open, close Iframe', () => {\n    it ('Iframe not open, close if view not set', () => {\n        const iceteaId = createNativeIframe() as any;\n        iceteaId.view = undefined;\n        try {\n            iceteaId.openIframe();\n            expect(true).toBe(false);\n        } catch (err) {\n            expect(err).toBeInstanceOf(Error);\n            expect(err.message).toBe('IceteaID Error: [VIEW_NOT_READY] View is not ready');\n        }\n        try {\n            iceteaId.closeIframe();\n            expect(true).toBe(false);\n        } catch (err) {\n            expect(err).toBeInstanceOf(Error);\n            expect(err.message).toBe('IceteaID Error: [VIEW_NOT_READY] View is not ready');\n        }\n    });\n    it('Open, Close Iframe when click', async () => {\n        const iceteaId = createNativeIframe();\n        const { getByTestId } = render(<iceteaId.IFrame/>);\n        const safeAreaView = getByTestId('qwerty');\n        expect(safeAreaView.props.style[1]).toHaveProperty(\n            'zIndex',\n            -10000,\n        );\n        expect(safeAreaView.props.style[1]).toHaveProperty(\n            'elevation',\n            -10000,\n        );\n        act(() => {\n            (iceteaId as any).openIframe();\n        });\n        expect(safeAreaView.props.style[1]).toHaveProperty(\n            'zIndex',\n            10000,\n        );\n        expect(safeAreaView.props.style[1]).toHaveProperty(\n            'elevation',\n            10000,\n        );\n        act(() => {\n            (iceteaId as any).closeIframe();\n        });\n        expect(safeAreaView.props.style[1]).toHaveProperty(\n            'zIndex',\n            -10000,\n        );\n        expect(safeAreaView.props.style[1]).toHaveProperty(\n            'elevation',\n            -10000,\n        );\n    });\n});\n\ndescribe('Postmessage', () => {\n    it('Post message with given parameters', async () => {\n        const iceteaId = createNativeIframe();\n        iceteaId.isReady = jest.fn(() => Promise.resolve());\n        const mockPostmessage = jest.fn();\n        (iceteaId as any).iframe = { postMessage: mockPostmessage };\n        await iceteaId.postMessage(JSON.stringify({ id: 123, msg: 'Here is test' }));\n\n        expect(mockPostmessage).toBeCalledWith(JSON.stringify({ id: 123, msg: 'Here is test' }));\n    });\n\n    it('Post message login with google', async () => {\n        const iceteaId = createNativeIframe();\n        iceteaId.isReady = jest.fn(() => Promise.resolve());\n        const mockPostmessage = jest.fn();\n        const id = randomId();\n        subjectBuilder(id, (iceteaId as any).transporter.messageHandlers);\n        const mockOpenIframe = jest.fn();\n        const mockCloseIframe = jest.fn();\n        (iceteaId as any).iframe = {\n            postMessage: mockPostmessage,\n        };\n        (iceteaId as any).view = {\n            openIframe: mockOpenIframe,\n            closeIframe: mockCloseIframe,\n        };\n\n        await iceteaId.postMessage(JSON.stringify({ id, requestType: 'LOGIN_WITH_GOOGLE', msg: 'Here is test' }));\n        expect((iceteaId as any).googleLoginId).toEqual(id);\n    });\n});\n\ndescribe('Onmessage', () => {\n    it ('On message will be call', () => {\n        const iceteaId = createNativeIframe();\n        const mockOnmsg = jest.fn();\n        (iceteaId as any).transporter.handleMessage = mockOnmsg;\n        const { getByTestId } = render(<iceteaId.IFrame/>);\n        const webview = getByTestId('abcxyz');\n        webview.props.onMessage();\n        expect(mockOnmsg).toBeCalledTimes(1);\n    });\n\n    it('On message ignore message from difference endpoint', () => {\n        const iceteaId = createNativeIframe();\n        const id = randomId();\n        const subject = subjectBuilder(id, (iceteaId as any).transporter.messageHandlers);\n        const event = {\n            nativeEvent: {\n                url: 'http://aaa.com',\n                data: JSON.stringify({ id, msg: 'Here is data' })\n            }\n        };\n        (iceteaId as any).transporter.handleMessage(event);\n        expect(subject.getValue()).toEqual('');\n    });\n\n    it('On message ignore message from difference id', () => {\n        const iceteaId = createNativeIframe();\n        const id = randomId();\n        const subject = subjectBuilder(id, (iceteaId as any).transporter.messageHandlers);\n        const event = {\n            nativeEvent: {\n                url: 'http://aaa.com',\n                data: JSON.stringify({ id: 123, msg: 'Here is data' })\n            }\n        };\n        (iceteaId as any).transporter.handleMessage(event);\n        expect(subject.getValue()).toEqual('');\n    });\n\n\n    it('On message will receive value', () => {\n        const iceteaId = createNativeIframe();\n        const id = randomId();\n        const subject = subjectBuilder(id, (iceteaId as any).transporter.messageHandlers);\n        const event = {\n            nativeEvent: {\n                url: BASE_URL,\n                data: JSON.stringify({ id, msg: 'Here is data' })\n            }\n        };\n        (iceteaId as any).transporter.handleMessage(event);\n        expect(subject.getValue()).toStrictEqual({ id, msg: 'Here is data' });\n    });\n});\n\ndescribe('Webview navigation', () => {\n    it ('Handle Webview navigation be call', () => {\n        const iceteaId = createNativeIframe();\n        const mockHandleState = jest.fn();\n        iceteaId.handleWebViewNavigationStateChangeWrapper = mockHandleState;\n        const { getByTestId } = render(<iceteaId.IFrame/>);\n        const webview = getByTestId('abcxyz');\n        webview.props.onNavigationStateChange();\n        expect(mockHandleState).toBeCalledTimes(1);\n    });\n\n    it('Handle Webview navigation', async () => {\n        const iceteaId = createNativeIframe();\n        iceteaId.isReady = jest.fn(() => Promise.resolve());\n        const id = randomId();\n        const subject = subjectBuilder(id, (iceteaId as any).transporter.messageHandlers);\n        const mockPostmessage = jest.fn();\n        const mockOpenIframe = jest.fn();\n        const mockCloseIframe = jest.fn();\n        (iceteaId as any).iframe = {\n            postMessage: mockPostmessage,\n        };\n        (iceteaId as any).view = {\n            openIframe: mockOpenIframe,\n            closeIframe: mockCloseIframe,\n        };\n\n        await iceteaId.postMessage(JSON.stringify({ id, requestType: 'LOGIN_WITH_GOOGLE', msg: 'Here is test' }));\n        const newNavstate = {\n            url: `http:/testthuima?token=${JSON.stringify({ access_token: 'tokenne' })}&existUser=true`,\n            canGoForward: false\n        };\n        iceteaId.handleWebViewNavigationStateChangeWrapper(newNavstate);\n        expect(subject.getValue()).toStrictEqual({ id, payload: {\n            existUser: 'true',\n            token: 'tokenne'\n        } });\n        expect((iceteaId as any).googleLoginId).toEqual('');\n    });\n});\n//\ndescribe ('Is ready resolve promise when iframe ready',  () => {\n    it ('It will post message', () => {\n        const iceteaId = createNativeIframe();\n        const mockPostmessage = jest.fn();\n        (iceteaId as any).iframe = {\n            postMessage: mockPostmessage,\n        };\n        iceteaId.isReady();\n        jest.advanceTimersByTime(1000);\n        expect(mockPostmessage).toBeCalledTimes(1);\n    });\n    it ('It will resolve value and clear subject', async () => {\n        const iceteaId = createNativeIframe() as any;\n        const mockPostmessage = jest.fn();\n        iceteaId.iframe = {\n            postMessage: mockPostmessage,\n        };\n        const isOkay = iceteaId.isReady();\n        jest.advanceTimersByTime(1000);\n        const idSubject = iceteaId.transporter.messageHandlers.keys().next().value;\n        iceteaId.transporter.on(JSON.stringify({ id: idSubject, payload: { msg: 'Hey! Im okay' } }));\n        await expect(isOkay).resolves.toStrictEqual({ id: idSubject, payload: { msg: 'Hey! Im okay' } });\n        const clearSubject = iceteaId.transporter.messageHandlers.get(idSubject);\n        expect(clearSubject).not.toBeDefined();\n        expect(clearInterval).toBeCalled();\n    });\n});\n\ndescribe('Webview agent', () => {\n    it('Correct agent when os is Android', () => {\n        Platform.OS = 'android';\n        const iceteaId = createNativeIframe();\n        const { getByTestId } = render(<iceteaId.IFrame/>);\n        const webview = getByTestId('abcxyz');\n        expect(webview.props.userAgent).toBe('Mozilla/5.0 (Linux; Android 4.1.1; Galaxy Nexus Build/JRO03C) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Mobile Safari/535.19');\n    });\n\n    it('Correct agent when os is Ios', () => {\n        Platform.OS = 'ios';\n        const iceteaId = createNativeIframe();\n        const { getByTestId } = render(<iceteaId.IFrame/>);\n        const webview = getByTestId('abcxyz');\n        expect(webview.props.userAgent).toBe('Mozilla/5.0 (iPhone; CPU iPhone OS 10_3 like Mac OS X) AppleWebKit/603.1.23 (KHTML, like Gecko) Version/10.0 Mobile/14E5239e Safari/602');\n    });\n});"]}
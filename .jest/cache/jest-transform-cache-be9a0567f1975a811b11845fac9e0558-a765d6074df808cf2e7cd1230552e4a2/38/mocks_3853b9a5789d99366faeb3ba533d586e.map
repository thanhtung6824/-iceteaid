{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/test/mocks.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAEA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAAhC,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACW,IAAA,KAAA,CAAA,SAAA,GAAY,IAAI,CAAC,EAAL,EAAZ;AACG,IAAA,KAAA,CAAA,WAAA,GAAc,IAAI,CAAC,EAAL,EAAd;AACA,IAAA,KAAA,CAAA,UAAA,GAAa,IAAI,CAAC,EAAL,EAAb;AACH,IAAA,KAAA,CAAA,OAAA,GAAU,IAAI,CAAC,EAAL,CAAQ,YAAA;AAAM,aAAA,OAAO,CAAP,OAAA,EAAA;AAAiB,KAA/B,CAAV;AACA,IAAA,KAAA,CAAA,WAAA,GAAc,IAAI,CAAC,EAAL,EAAd;;AACV;;AAAD,SAAA,UAAA;AAAC,CAND,CAAgC,KAAA,CAAA,MAAhC,CAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;;AAQb,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,eAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACW,IAAA,KAAA,CAAA,eAAA,GAA6C,IAAI,GAAJ,EAA7C;AACG,IAAA,KAAA,CAAA,SAAA,GAAY,IAAI,CAAC,EAAL,EAAZ;;AACb;;AAAD,SAAA,eAAA;AAAC,CAHD,CAAqC,KAAA,CAAA,WAArC,CAAA;;AAAa,OAAA,CAAA,eAAA,GAAA,eAAA;;AAKb,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,OAAA,GAAA;;AAEC;;AAAD,SAAA,OAAA;AAAC,CAFD,CAA6B,UAAA,CAAA,OAA7B,CAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA;;AAIA,OAAA,CAAA,qBAAA,GAAwB,YAAA;AACjC,SAAO,IAAI,eAAJ,CAAoB,WAAA,CAAA,QAApB,CAAP;AACH,CAFY;;AAIA,OAAA,CAAA,gBAAA,GAAmB,YAAA;AAC5B,SAAO,IAAI,UAAJ,CAAe,WAAA,CAAA,QAAf,EAAyB,KAAzB,EAAgC,OAAA,CAAA,qBAAA,EAAhC,CAAP;AACH,CAFY;;AAIA,OAAA,CAAA,aAAA,GAAgB,YAAA;AACzB,SAAO,IAAI,OAAJ,CAAY,IAAI,OAAA,CAAA,OAAJ,CAAY,KAAZ,CAAZ,CAAP;AACH,CAFY;;AAIA,OAAA,CAAA,OAAA,GAAU,KAAA,CAAA,UAAA,CAAW,KAAA,CAAA,OAAX,EAAoB;AACvC,EAAA,MAAM,EAAE,KAD+B;AAEvC,EAAA,MAAM,EAAE,UAF+B;AAGvC,EAAA,WAAW,EAAE,eAH0B;AAIvC,EAAA,OAAO,EAAE,WAAA,CAAA;AAJ8B,CAApB,CAAV","sourcesContent":["import { Iframe, Transporter } from '../src';\nimport { Subject } from 'rxjs';\nimport { BASE_URL } from './constants';\nimport { sdkBuilder } from '../src';\nimport { SdkBase } from '../src';\nimport { BaseApi } from '../src/api/base-api';\n\nexport class TestIframe extends Iframe {\n    public bootstrap = jest.fn();\n    protected closeIframe = jest.fn();\n    protected openIframe = jest.fn();\n    public isReady = jest.fn(() => Promise.resolve());\n    public postMessage = jest.fn();\n}\n\nexport class TestTransporter extends Transporter {\n    public messageHandlers: Map<string, Subject<any>> = new Map();\n    protected bootstrap = jest.fn()\n}\n\nexport class TestApi extends BaseApi {\n    \n}\n\nexport const createTestTransporter = (): TestTransporter => {\n    return new TestTransporter(BASE_URL);\n};\n\nexport const createTestIframe = (): TestIframe => {\n    return new TestIframe(BASE_URL, 'xxx', createTestTransporter());\n};\n\nexport const createTestApi = (): TestApi => {\n    return new TestApi(new TestSdk('xxx'));\n};\n\nexport const TestSdk = sdkBuilder(SdkBase, {\n    target: 'web',\n    Iframe: TestIframe,\n    Transporter: TestTransporter,\n    baseUrl: BASE_URL,\n});\n"]}
{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/react-native/test/index.test.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AAGA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAEA,EAAE,CAAC,gBAAD,EAAmB,YAAA;AACjB,MAAM,QAAQ,GAAG,OAAA,CAAA,kBAAA,EAAjB;AACA,MAAM,SAAS,GAAG,cAAA,CAAA,MAAA,CAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,MAAV,EAAgB,IAAhB,CAAP,CAAlB;AACA,EAAA,MAAM,CAAC,SAAS,CAAC,MAAV,EAAD,CAAN,CAA2B,eAA3B;AACH,CAJC,CAAF;AAMA,EAAE,CAAE,kCAAF,EAAsC,YAAA;AAC5B,MAAA,QAAQ,GAAK,OAAA,CAAA,SAAA,GAAL,QAAR;AACR,MAAM,QAAQ,GAAG,IAAI,QAAJ,CAAa,KAAb,CAAjB;AACA,EAAA,MAAM,CAAC,QAAQ,CAAC,MAAV,CAAN,CAAwB,aAAxB,CAAuC,QAAQ,CAAC,MAAT,CAAwB,MAA/D;AACH,CAJC,CAAF;AAMA,EAAE,CAAE,8BAAF,EAAkC,YAAA;AAChC,SAAQ,MAAc,CAAC,KAAD,CAAtB;AACA,SAAQ,MAAc,CAAC,eAAvB;AACA,SAAQ,MAAc,CAAC,IAAvB;AACA,SAAQ,MAAc,CAAC,IAAvB;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,GAAjB,CAAN,CAA4B,OAA5B,CAAoC,SAApC;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,eAAjB,CAAN,CAAwC,OAAxC,CAAgD,SAAhD;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,IAAjB,CAAN,CAA6B,OAA7B,CAAqC,SAArC;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,IAAjB,CAAN,CAA6B,OAA7B,CAAqC,SAArC;AACA,EAAA,OAAA,CAAA,SAAA;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,GAAjB,CAAN,CAA4B,WAA5B;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,eAAjB,CAAN,CAAwC,WAAxC;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,IAAjB,CAAN,CAA6B,WAA7B;AACA,EAAA,MAAM,CAAE,MAAc,CAAC,IAAjB,CAAN,CAA6B,WAA7B;AACH,CAdC,CAAF","sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport React from 'react';\nimport { createSdk, createNativeIframe } from './mocks';\nimport { render } from '@testing-library/react-native';\n\nit('Match snapshot', () => {\n    const iceteaId = createNativeIframe();\n    const component = render(<iceteaId.IFrame />);\n    expect(component.toJSON()).toMatchSnapshot();\n});\n\nit ('Get Iframe will be same with Sdk', () => {\n    const { IceteaId } = createSdk();\n    const iceteaId = new IceteaId('xxx');\n    expect(iceteaId.IFrame).toStrictEqual((iceteaId.iframe as any).IFrame);\n});\n\nit ('Global variable were defined', () => {\n    delete (global as any)['URL'];\n    delete (global as any).URLSearchParams;\n    delete (global as any).atob;\n    delete (global as any).btoa;\n    expect((global as any).URL).toEqual(undefined);\n    expect((global as any).URLSearchParams).toEqual(undefined);\n    expect((global as any).atob).toEqual(undefined);\n    expect((global as any).btoa).toEqual(undefined);\n    createSdk();\n    expect((global as any).URL).toBeDefined();\n    expect((global as any).URLSearchParams).toBeDefined();\n    expect((global as any).atob).toBeDefined();\n    expect((global as any).btoa).toBeDefined();\n});\n"]}
a285e43bf8026305dfcc2b2db0325a16
"use strict";

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * @jest-environment jsdom
 */

var mock_1 = require("./mock");

var iceteaid_core_1 = require("iceteaid-core");

beforeEach(function () {
  var iframe = document.getElementById('aaa');

  if (iframe && iframe.parentNode) {
    iframe.parentNode.removeChild(iframe);
  }
});
it('Will listener event message', function () {
  return __awaiter(void 0, void 0, void 0, function () {
    var transporter, map;
    return __generator(this, function (_a) {
      transporter = mock_1.createWebTransporter();
      map = {};
      window.addEventListener = jest.fn(function (event, cb) {
        map[event] = cb;
      });
      transporter.bootstrap();
      expect(map.message).toBeDefined();
      return [2
      /*return*/
      ];
    });
  });
});
it('Will ignore message from difference endpoint', function () {
  return __awaiter(void 0, void 0, void 0, function () {
    var transporter, id, subject, map, event;
    return __generator(this, function (_a) {
      transporter = mock_1.createWebTransporter();
      id = iceteaid_core_1.randomId();
      subject = iceteaid_core_1.subjectBuilder(id, transporter.messageHandlers);
      map = {};
      window.addEventListener = jest.fn(function (event, cb) {
        map[event] = cb;
      });
      transporter.bootstrap();
      event = {
        origin: 'aha',
        data: JSON.stringify({
          id: id,
          msg: 'Hey! Im test'
        })
      };
      map.message(event);
      expect(subject.getValue()).toEqual('');
      return [2
      /*return*/
      ];
    });
  });
});
it('Will ignore message if difference id', function () {
  return __awaiter(void 0, void 0, void 0, function () {
    var transporter, id, subject, map, event;
    return __generator(this, function (_a) {
      transporter = mock_1.createWebTransporter();
      id = iceteaid_core_1.randomId();
      subject = iceteaid_core_1.subjectBuilder(id, transporter.messageHandlers);
      map = {};
      window.addEventListener = jest.fn(function (event, cb) {
        map[event] = cb;
      });
      transporter.bootstrap();
      event = {
        origin: 'xxx',
        data: JSON.stringify({
          id: 123,
          msg: 'Hey! Im test'
        })
      };
      map.message(event);
      expect(subject.getValue()).toEqual('');
      return [2
      /*return*/
      ];
    });
  });
});
it('Will received message', function () {
  return __awaiter(void 0, void 0, void 0, function () {
    var transporter, id, subject, map, event;
    return __generator(this, function (_a) {
      transporter = mock_1.createWebTransporter();
      id = iceteaid_core_1.randomId();
      subject = iceteaid_core_1.subjectBuilder(id, transporter.messageHandlers);
      map = {};
      window.addEventListener = jest.fn(function (event, cb) {
        map[event] = cb;
      });
      transporter.bootstrap();
      event = {
        origin: 'xxx',
        data: JSON.stringify({
          id: id,
          msg: 'Hey! Im test'
        })
      };
      map.message(event);
      expect(subject.getValue()).toStrictEqual({
        id: id,
        msg: 'Hey! Im test'
      });
      return [2
      /*return*/
      ];
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkbWluMS9EZXNrdG9wL0BpY2V0ZWFpZC9wYWNrYWdlcy93ZWIvdGVzdC93ZWIudHJhbnNwb3J0ZXIudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBR0EsSUFBQSxNQUFBLEdBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQTs7QUFDQSxJQUFBLGVBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQUVBLFVBQVUsQ0FBQyxZQUFBO0FBQ1AsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsS0FBeEIsQ0FBZjs7QUFDQSxNQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsVUFBckIsRUFBaUM7QUFDN0IsSUFBQSxNQUFNLENBQUMsVUFBUCxDQUFrQixXQUFsQixDQUE4QixNQUE5QjtBQUNIO0FBQ0osQ0FMUyxDQUFWO0FBT0EsRUFBRSxDQUFFLDZCQUFGLEVBQWlDLFlBQUE7QUFBQSxTQUFBLFNBQUEsQ0FBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxZQUFBOzs7QUFDekIsTUFBQSxXQUFXLEdBQUcsTUFBQSxDQUFBLG9CQUFBLEVBQWQ7QUFDQSxNQUFBLEdBQUcsR0FBRyxFQUFOO0FBQ04sTUFBQSxNQUFNLENBQUMsZ0JBQVAsR0FBMEIsSUFBSSxDQUFDLEVBQUwsQ0FBUSxVQUFDLEtBQUQsRUFBZ0IsRUFBaEIsRUFBdUI7QUFDckQsUUFBQSxHQUFHLENBQUMsS0FBRCxDQUFILEdBQWEsRUFBYjtBQUNILE9BRnlCLENBQTFCO0FBR0MsTUFBQSxXQUFtQixDQUFDLFNBQXBCO0FBQ0QsTUFBQSxNQUFNLENBQUMs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R0FBRyxHQUFHLEVBQU47QUFDTixNQUFBLE1BQU0sQ0FBQyxnQkFBUCxHQUEwQixJQUFJLENBQUMsRUFBTCxDQUFRLFVBQUMsS0FBRCxFQUFnQixFQUFoQixFQUF1QjtBQUNyRCxRQUFBLEdBQUcsQ0FBQyxLQUFELENBQUgsR0FBYSxFQUFiO0FBQ0gsT0FGeUIsQ0FBMUI7QUFHQyxNQUFBLFdBQW1CLENBQUMsU0FBcEI7QUFDSyxNQUFBLEtBQUssR0FBRztBQUNWLFFBQUEsTUFBTSxFQUFFLEtBREU7QUFFVixRQUFBLElBQUksRUFBRSxJQUFJLENBQUMsU0FBTCxDQUFlO0FBQUUsVUFBQSxFQUFFLEVBQUEsRUFBSjtBQUFNLFVBQUEsR0FBRyxFQUFFO0FBQVgsU0FBZjtBQUZJLE9BQVI7QUFJTixNQUFBLEdBQUcsQ0FBQyxPQUFKLENBQVksS0FBWjtBQUNBLE1BQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFSLEVBQUQsQ0FBTixDQUEyQixhQUEzQixDQUF5QztBQUFFLFFBQUEsRUFBRSxFQUFBLEVBQUo7QUFBTSxRQUFBLEdBQUcsRUFBRTtBQUFYLE9BQXpDOzs7OztHQWZ3QixDQUFBO0FBZ0IzQixDQWhCQyxDQUFGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAamVzdC1lbnZpcm9ubWVudCBqc2RvbVxuICovXG5pbXBvcnQgeyBjcmVhdGVXZWJUcmFuc3BvcnRlciB9IGZyb20gJy4vbW9jayc7XG5pbXBvcnQgeyByYW5kb21JZCwgc3ViamVjdEJ1aWxkZXIgfSBmcm9tICdpY2V0ZWFpZC1jb3JlJztcblxuYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgY29uc3QgaWZyYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FhYScpO1xuICAgIGlmIChpZnJhbWUgJiYgaWZyYW1lLnBhcmVudE5vZGUpIHtcbiAgICAgICAgaWZyYW1lLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICB9XG59KTtcblxuaXQgKCdXaWxsIGxpc3RlbmVyIGV2ZW50IG1lc3NhZ2UnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdHJhbnNwb3J0ZXIgPSBjcmVhdGVXZWJUcmFuc3BvcnRlcigpO1xuICAgIGNvbnN0IG1hcCA9IHt9IGFzIGFueTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciA9IGplc3QuZm4oKGV2ZW50OiBzdHJpbmcsIGNiOiBhbnkpID0+IHtcbiAgICAgICAgbWFwW2V2ZW50XSA9IGNiO1xuICAgIH0pO1xuICAgICh0cmFuc3BvcnRlciBhcyBhbnkpLmJvb3RzdHJhcCgpO1xuICAgIGV4cGVjdChtYXAubWVzc2FnZSkudG9CZURlZmluZWQoKTtcbn0pO1xuXG5pdCAoJ1dpbGwgaWdub3JlIG1lc3NhZ2UgZnJvbSBkaWZmZXJlbmNlIGVuZHBvaW50JywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gY3JlYXRlV2ViVHJhbnNwb3J0ZXIoKTtcbiAgICBjb25zdCBpZCA9IHJhbmRvbUlkKCk7XG4gICAgY29uc3Qgc3ViamVjdCA9IHN1YmplY3RCdWlsZGVyKGlkLCB0cmFuc3BvcnRlci5tZXNzYWdlSGFuZGxlcnMpO1xuICAgIGNvbnN0IG1hcCA9IHt9IGFzIGFueTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciA9IGplc3QuZm4oKGV2ZW50OiBzdHJpbmcsIGNiOiBhbnkpID0+IHtcbiAgICAgICAgbWFwW2V2ZW50XSA9IGNiO1xuICAgIH0pO1xuICAgICh0cmFuc3BvcnRlciBhcyBhbnkpLmJvb3RzdHJhcCgpO1xuICAgIGNvbnN0IGV2ZW50ID0ge1xuICAgICAgICBvcmlnaW46ICdhaGEnLFxuICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7IGlkLCBtc2c6ICdIZXkhIEltIHRlc3QnIH0pXG4gICAgfTtcbiAgICBtYXAubWVzc2FnZShldmVudCk7XG4gICAgZXhwZWN0KHN1YmplY3QuZ2V0VmFsdWUoKSkudG9FcXVhbCgnJyk7XG59KTtcblxuaXQgKCdXaWxsIGlnbm9yZSBtZXNzYWdlIGlmIGRpZmZlcmVuY2UgaWQnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdHJhbnNwb3J0ZXIgPSBjcmVhdGVXZWJUcmFuc3BvcnRlcigpO1xuICAgIGNvbnN0IGlkID0gcmFuZG9tSWQoKTtcbiAgICBjb25zdCBzdWJqZWN0ID0gc3ViamVjdEJ1aWxkZXIoaWQsIHRyYW5zcG9ydGVyLm1lc3NhZ2VIYW5kbGVycyk7XG4gICAgY29uc3QgbWFwID0ge30gYXMgYW55O1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyID0gamVzdC5mbigoZXZlbnQ6IHN0cmluZywgY2I6IGFueSkgPT4ge1xuICAgICAgICBtYXBbZXZlbnRdID0gY2I7XG4gICAgfSk7XG4gICAgKHRyYW5zcG9ydGVyIGFzIGFueSkuYm9vdHN0cmFwKCk7XG4gICAgY29uc3QgZXZlbnQgPSB7XG4gICAgICAgIG9yaWdpbjogJ3h4eCcsXG4gICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHsgaWQ6IDEyMywgbXNnOiAnSGV5ISBJbSB0ZXN0JyB9KVxuICAgIH07XG4gICAgbWFwLm1lc3NhZ2UoZXZlbnQpO1xuICAgIGV4cGVjdChzdWJqZWN0LmdldFZhbHVlKCkpLnRvRXF1YWwoJycpO1xufSk7XG5cbml0KCdXaWxsIHJlY2VpdmVkIG1lc3NhZ2UnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdHJhbnNwb3J0ZXIgPSBjcmVhdGVXZWJUcmFuc3BvcnRlcigpO1xuICAgIGNvbnN0IGlkID0gcmFuZG9tSWQoKTtcbiAgICBjb25zdCBzdWJqZWN0ID0gc3ViamVjdEJ1aWxkZXIoaWQsIHRyYW5zcG9ydGVyLm1lc3NhZ2VIYW5kbGVycyk7XG5cbiAgICBjb25zdCBtYXAgPSB7fSBhcyBhbnk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIgPSBqZXN0LmZuKChldmVudDogc3RyaW5nLCBjYjogYW55KSA9PiB7XG4gICAgICAgIG1hcFtldmVudF0gPSBjYjtcbiAgICB9KTtcbiAgICAodHJhbnNwb3J0ZXIgYXMgYW55KS5ib290c3RyYXAoKTtcbiAgICBjb25zdCBldmVudCA9IHtcbiAgICAgICAgb3JpZ2luOiAneHh4JyxcbiAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoeyBpZCwgbXNnOiAnSGV5ISBJbSB0ZXN0JyB9KVxuICAgIH07XG4gICAgbWFwLm1lc3NhZ2UoZXZlbnQpO1xuICAgIGV4cGVjdChzdWJqZWN0LmdldFZhbHVlKCkpLnRvU3RyaWN0RXF1YWwoeyBpZCwgbXNnOiAnSGV5ISBJbSB0ZXN0JyB9KTtcbn0pOyJdfQ==
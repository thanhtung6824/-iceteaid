{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/src/provider/transporter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAGA,IAAA,WAAA;AAAA;AAAA,YAAA;AACI,WAAA,WAAA,CACc,QADd,EAC8B;AAAhB,SAAA,QAAA,GAAA,QAAA;AAIP,SAAA,eAAA,GAAkB,IAAI,GAAJ,EAAlB;AAFH,QAAI,KAAK,SAAT,EAAoB,KAAK,SAAL;AACvB;;AAKY,EAAA,WAAA,CAAA,SAAA,CAAA,IAAA,GAAb,UAAkB,MAAlB,EAAkC,OAAlC,EAA8D;;;;;;;;;AAC1D,mBAAA,CAAA;AAAA;AAAA,cAAM,MAAM,CAAC,OAAP,EAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AACM,YAAA,EAAE,GAAG,OAAO,CAAC,EAAb;AACA,YAAA,OAAO,GAAG,SAAA,CAAA,cAAA,CAAe,EAAf,EAAmB,KAAK,eAAxB,CAAV;AACN,YAAA,MAAM,CAAC,WAAP,CAAmB,IAAI,CAAC,SAAL,CAAe,OAAf,CAAnB;AACA,mBAAA,CAAA;AAAA;AAAA,cAAO,MAAA,CAAA,aAAA,CAAc,OAAO,CAAC,YAAR,GAAuB,IAAvB,CACjB,WAAA,CAAA,MAAA,CAAO,UAAA,OAAA,EAAO;AAAI,qBAAA,CAAC,CAAD,OAAA;AAAS,aAA3B,CADiB,EAEjB,WAAA,CAAA,GAAA,CAAI,UAAA,OAAA,EAAO;AACP,kBAAI,OAAO,CAAC,OAAR,IAAmB,OAAO,CAAC,OAAR,CAAgB,GAAvC,EAA4C;AACxC,uBAAO,MAAA,CAAA,aAAA,CAAc,MAAA,CAAA,UAAA,CAAW,OAAX,CAAd,CAAP;AACH;;AACD,qBAAO,OAAP;AACH,aALD,CAFiB,EAQjB,WAAA,CAAA,IAAA,CAAK,CAAL,CARiB,EASjB,WAAA,CAAA,GAAA,CAAI,YAAA;AACA,cAAA,KAAI,CAAC,eAAL,CAAqB,MAArB,CAA4B,EAA5B;AACH,aAFD,CATiB,CAAd,CAAP,CAAA;;;;AAaH,GAlBY;;AAoBN,EAAA,WAAA,CAAA,SAAA,CAAA,EAAA,GAAP,UAAU,OAAV,EAAyB;AACrB,QAAM,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,OAAX,CAAhB;AACA,QAAM,OAAO,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAyB,OAAO,CAAC,EAAjC,CAAhB;;AACA,QAAI,OAAJ,EAAa;AACT,MAAA,OAAO,CAAC,IAAR,CAAa,OAAb;AACH;AACJ,GANM;;AAOX,SAAA,WAAA;AAAC,CArCD,EAAA;;AAAsB,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import { lastValueFrom, throwError } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\nimport { subjectBuilder } from '../helpers';\nimport { Iframe } from './iframe';\n\nexport abstract class Transporter {\n    constructor(\n        protected endpoint: string,\n    ) {\n        if (this.bootstrap) this.bootstrap();\n    }\n    public messageHandlers = new Map<string, any>();\n\n    protected abstract bootstrap(): void\n\n    public async post(iframe: Iframe, payload: Record<string, any>): Promise<any> {\n        await iframe.isReady();\n        const id = payload.id;\n        const subject = subjectBuilder(id, this.messageHandlers);\n        iframe.postMessage(JSON.stringify(payload));\n        return lastValueFrom(subject.asObservable().pipe(\n            filter(message => !!message),\n            map(message => {\n                if (message.payload && message.payload.err) {\n                    return lastValueFrom(throwError(message));\n                }\n                return message;\n            }),\n            take(1),\n            tap(() => {\n                this.messageHandlers.delete(id);\n            })\n        ));\n    }\n\n    public on(payload: string): void {\n        const message = JSON.parse(payload);\n        const subject = this.messageHandlers.get(message.id);\n        if (subject) {\n            subject.next(message);\n        }\n    }\n}"]}
d98c8fd10a83434ed0abcd91be0044e2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sdkBuilder = exports.SdkConfiguration = exports.SdkBase = void 0;

var exception_handler_1 = require("./exception-handler");

var user_1 = require("../api/user");

var auth_1 = require("../api/auth");

var SdkBase =
/** @class */
function () {
  function SdkBase(apiKey) {
    if (!apiKey) {
      throw exception_handler_1.missingApiKeyError();
    }

    this.apiKey = apiKey;
    this.endpoint = exports.SdkConfiguration.baseUrl;
    this.user = new user_1.UserApi(this);
    this.auth = new auth_1.AuthApi(this);
    this.sdkId = btoa(JSON.stringify({
      apiKey: apiKey,
      target: exports.SdkConfiguration.target,
      baseUrl: exports.SdkConfiguration.baseUrl
    }));
    SdkBase.instance = this;
  }

  SdkBase.getInstance = function (apiKey) {
    if (!SdkBase.instance) {
      SdkBase.instance = new SdkBase(apiKey);
    }

    return SdkBase.instance;
  };

  Object.defineProperty(SdkBase.prototype, "transporter", {
    get: function () {
      if (!SdkBase._transport.has(this.sdkId)) {
        SdkBase._transport.set(this.sdkId, new exports.SdkConfiguration.Transporter(this.endpoint));
      }

      return SdkBase._transport.get(this.sdkId);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(SdkBase.prototype, "iframe", {
    get: function () {
      if (!SdkBase._iframe.has(this.sdkId)) {
        SdkBase._iframe.set(this.sdkId, new exports.SdkConfiguration.Iframe(this.endpoint, this.sdkId, this.transporter));
      }

      return SdkBase._iframe.get(this.sdkId);
    },
    enumerable: false,
    configurable: true
  });
  SdkBase._transport = new Map();
  SdkBase._iframe = new Map();
  return SdkBase;
}();

exports.SdkBase = SdkBase;
exports.SdkConfiguration = {};

function sdkBuilder(IceteaSdk, configuration) {
  Object.assign(exports.SdkConfiguration, configuration);
  return IceteaSdk;
}

exports.sdkBuilder = sdkBuilder;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkbWluMS9EZXNrdG9wL0BpY2V0ZWFpZC9wYWNrYWdlcy9jb3JlL3NyYy9wcm92aWRlci9zZGsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsbUJBQUEsR0FBQSxPQUFBLENBQUEscUJBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsYUFBQSxDQUFBOztBQUdBLElBQUEsTUFBQSxHQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUE7O0FBRUEsSUFBQSxPQUFBO0FBQUE7QUFBQSxZQUFBO0FBV0ksV0FBQSxPQUFBLENBQVksTUFBWixFQUEwQjtBQUN0QixRQUFJLENBQUMsTUFBTCxFQUFhO0FBQ1QsWUFBTSxtQkFBQSxDQUFBLGtCQUFBLEVBQU47QUFDSDs7QUFDRCxTQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0EsU0FBSyxRQUFMLEdBQWdCLE9BQUEsQ0FBQSxnQkFBQSxDQUFpQixPQUFqQztBQUNBLFNBQUssSUFBTCxHQUFZLElBQUksTUFBQSxDQUFBLE9BQUosQ0FBWSxJQUFaLENBQVo7QUFDQSxTQUFLLElBQUwsR0FBWSxJQUFJLE1BQUEsQ0FBQSxPQUFKLENBQVksSUFBWixDQUFaO0FBQ0EsU0FBSyxLQUFMLEdBQWEsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFMLENBQWU7QUFDN0IsTUFBQSxNQUFNLEVBQUUsTUFEcUI7QUFFN0IsTUFBQSxNQUFNLEVBQUUsT0FBQSxDQUFBLGdCQUFBLENBQWlCLE1BRkk7QUFHN0IsTUFBQSxPQUFPLEVBQUUsT0FBQSxDQUFBLGdCQUFBLENBQWlCO0FBSEcsS0FBZixDQUFELENBQWpCO0FBTUEsSUFBQSxPQUFPLENBQUMsUUFBUixHQUFtQixJQUFuQjtBQUNIOztBQUVhLEVBQUEsT0FBQSxDQUFBLFdBQUEsR0FBZCxVQUEwQixNQUExQixFQUF3QztBQUNwQyxRQUFJLENBQUMsT0FBTyxDQUFDLFFBQWIsRUFBdUI7QUFDbkIsTUFBQSxPQUFPLENBQUMsUUFBUixHQUFtQixJQUFJLE9BQUosQ0FBWSxNQUFaLENBQW5CO0FBQ0g7O0FBQ0QsV0FBTyxPQUFPLENBQUMsUUFBZjtBQUNILEdBTGE7O0FBT2QsRUFBQSxNQUFBLENBQUEsY0FBQSxDQUFXLE9BQUEsQ0FBQSxTQUFYLEVBQVcsYUFBWCxFQUFzQjtTQUF0QixZQUFBO0FBQ0ksVUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFSLENBQW1CLEdBQW5CLENBQXVCLEtBQUssS0FBNUIsQ0FBTCxFQUF5QztBQUNyQyxRQUFBLE9BQU8sQ0FBQyxVQUFSLENBQW1CLEdBQW5CLENBQ0ksS0FBSyxLQURULEVBRUksSUFBSSxPQUFBLENBQUEsZ0JBQUEsQ0FBaUIsV0FBckIsQ0FBaUMsS0FBSyxRQUF0QyxDQUZKO0FBSUg7O0FBQ0QsYUFBb0IsT0FBTyxDQUFDLFVBQVIsQ0FBbUIsR0FBbkIsQ0FBdUIsS0FBSyxLQUE1QixDQUFwQjtBQUNILEtBUnFCO3FCQUFBOztBQUFBLEdBQXRCO0FBVUEsRUFBQSxNQUFBLENBQUEsY0FBQSxDQUFXLE9BQUEsQ0FBQSxTQUFYLEVBQVcsUUFBWCxFQUFpQjtTQUFqQixZQUFBO0FBQ0ksVUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFSLENBQWdCLEdBQWhCLENBQW9CLEtBQUssS0FBekIsQ0FBTCxFQUFzQztBQUNsQyxRQUFBLE9BQU8sQ0FBQyxPQUFSLENBQWdCLEdBQWhCLENBQ0ksS0FBSyxLQURULEVBRUksSUFBSSxPQUFBLENBQUEsZ0JBQUEsQ0FBaUIsTUFBckIsQ0FBNEIsS0FBSyxRQUFqQyxFQUEyQyxLQUFLLEtBQWhELEVBQXVELEtBQUssV0FBNUQsQ0FGSjtBQUlIOztBQUNELGFBQWUsT0FBTyxDQUFDLE9BQVIsQ0FBZ0IsR0FBaEIsQ0FBb0IsS0FBSyxLQUF6QixDQUFmO0FBQ0gsS0FSZ0I7cUJBQUE7O0FBQUEsR0FBakI7QUE1Q2UsRUFBQSxPQUFBLENBQUEsVUFBQSxHQUF1QyxJQUFJLEdBQUosRUFBdkM7QUFDQSxFQUFBLE9BQUEsQ0FBQSxPQUFBLEdBQStCLElBQUksR0FBSixFQUEvQjtBQW9EbkIsU0FBQSxPQUFBO0FBQUMsQ0F0REQsRUFBQTs7QUFBYSxPQUFBLENBQUEsT0FBQSxHQUFBLE9BQUE7QUFpRUEsT0FBQSxDQUFBLGdCQUFBLEdBQXFDLEVBQXJDOztBQUViLFNBQWdCLFVBQWhCLENBQ0ksU0FESixFQUVJLGFBRkosRUFFbUM7QUFFL0IsRUFBQSxNQUFNLENBQUMsTUFBUCxDQUFjLE9BQUEsQ0FBQSxnQkFBZCxFQUFnQyxhQUFoQztBQUNBLFNBQU8sU0FBUDtBQUNIOztBQU5ELE9BQUEsQ0FBQSxVQUFBLEdBQUEsVUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1pc3NpbmdBcGlLZXlFcnJvciB9IGZyb20gJy4vZXhjZXB0aW9uLWhhbmRsZXInO1xuaW1wb3J0IHsgVXNlckFwaSB9IGZyb20gJy4uL2FwaS91c2VyJztcbmltcG9ydCB7IElmcmFtZSB9IGZyb20gJy4vaWZyYW1lJztcbmltcG9ydCB7IFRyYW5zcG9ydGVyIH0gZnJvbSAnLi90cmFuc3BvcnRlcic7XG5pbXBvcnQgeyBBdXRoQXBpIH0gZnJvbSAnLi4vYXBpL2F1dGgnO1xuXG5leHBvcnQgY2xhc3MgU2RrQmFzZSB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgX3RyYW5zcG9ydDogTWFwPHN0cmluZywgVHJhbnNwb3J0ZXI+ID0gbmV3IE1hcCgpO1xuICAgIHByaXZhdGUgc3RhdGljIF9pZnJhbWU6IE1hcDxzdHJpbmcsIElmcmFtZT4gPSBuZXcgTWFwKCk7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgc2RrSWQ6IHN0cmluZztcbiAgICBwdWJsaWMgcmVhZG9ubHkgZW5kcG9pbnQ6IHN0cmluZztcbiAgICBwdWJsaWMgcmVhZG9ubHkgdXNlcjogVXNlckFwaTtcbiAgICBwdWJsaWMgcmVhZG9ubHkgYXV0aDogQXV0aEFwaTtcbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogU2RrQmFzZTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGFwaUtleTogc3RyaW5nXG5cbiAgICBjb25zdHJ1Y3RvcihhcGlLZXk6IHN0cmluZykge1xuICAgICAgICBpZiAoIWFwaUtleSkge1xuICAgICAgICAgICAgdGhyb3cgbWlzc2luZ0FwaUtleUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgICAgIHRoaXMuZW5kcG9pbnQgPSBTZGtDb25maWd1cmF0aW9uLmJhc2VVcmw7XG4gICAgICAgIHRoaXMudXNlciA9IG5ldyBVc2VyQXBpKHRoaXMpO1xuICAgICAgICB0aGlzLmF1dGggPSBuZXcgQXV0aEFwaSh0aGlzKTtcbiAgICAgICAgdGhpcy5zZGtJZCA9IGJ0b2EoSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgYXBpS2V5OiBhcGlLZXksXG4gICAgICAgICAgICB0YXJnZXQ6IFNka0NvbmZpZ3VyYXRpb24udGFyZ2V0LFxuICAgICAgICAgICAgYmFzZVVybDogU2RrQ29uZmlndXJhdGlvbi5iYXNlVXJsLFxuICAgICAgICAgICAgLy8gb3JpZ2luOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luLFxuICAgICAgICB9KSk7XG4gICAgICAgIFNka0Jhc2UuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoYXBpS2V5OiBzdHJpbmcpOiBTZGtCYXNlIHtcbiAgICAgICAgaWYgKCFTZGtCYXNlLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBTZGtCYXNlLmluc3RhbmNlID0gbmV3IFNka0Jhc2UoYXBpS2V5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU2RrQmFzZS5pbnN0YW5jZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHRyYW5zcG9ydGVyKCk6IFRyYW5zcG9ydGVyIHtcbiAgICAgICAgaWYgKCFTZGtCYXNlLl90cmFuc3BvcnQuaGFzKHRoaXMuc2RrSWQpKSB7XG4gICAgICAgICAgICBTZGtCYXNlLl90cmFuc3BvcnQuc2V0KFxuICAgICAgICAgICAgICAgIHRoaXMuc2RrSWQsXG4gICAgICAgICAgICAgICAgbmV3IFNka0NvbmZpZ3VyYXRpb24uVHJhbnNwb3J0ZXIodGhpcy5lbmRwb2ludClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxUcmFuc3BvcnRlcj5TZGtCYXNlLl90cmFuc3BvcnQuZ2V0KHRoaXMuc2RrSWQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaWZyYW1lKCk6IElmcmFtZSB7XG4gICAgICAgIGlmICghU2RrQmFzZS5faWZyYW1lLmhhcyh0aGlzLnNka0lkKSkge1xuICAgICAgICAgICAgU2RrQmFzZS5faWZyYW1lLnNldChcbiAgICAgICAgICAgICAgICB0aGlzLnNka0lkLFxuICAgICAgICAgICAgICAgIG5ldyBTZGtDb25maWd1cmF0aW9uLklmcmFtZSh0aGlzLmVuZHBvaW50LCB0aGlzLnNka0lkLCB0aGlzLnRyYW5zcG9ydGVyKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPElmcmFtZT5TZGtCYXNlLl9pZnJhbWUuZ2V0KHRoaXMuc2RrSWQpO1xuICAgIH1cbn1cbnR5cGUgQ29uc3RydWN0b3JPZjxDPiA9IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IEMgfTtcblxuaW50ZXJmYWNlIFNka0NvbmZpZ3VyYXRpb24ge1xuICAgIHRhcmdldDogJ3dlYicgfCAncmVhY3QtbmF0aXZlJztcbiAgICBiYXNlVXJsOiBzdHJpbmc7XG4gICAgVHJhbnNwb3J0ZXI6IENvbnN0cnVjdG9yT2Y8VHJhbnNwb3J0ZXI+LFxuICAgIElmcmFtZTogQ29uc3RydWN0b3JPZjxJZnJhbWU+LFxuICAgIEluc3RhbmNlPzogU2RrQmFzZSB8IHVuZGVmaW5lZCxcbn1cblxuZXhwb3J0IGNvbnN0IFNka0NvbmZpZ3VyYXRpb246IFNka0NvbmZpZ3VyYXRpb24gPSB7fSBhcyBTZGtDb25maWd1cmF0aW9uO1xuXG5leHBvcnQgZnVuY3Rpb24gc2RrQnVpbGRlcjxTZGsgZXh0ZW5kcyBTZGtCYXNlPihcbiAgICBJY2V0ZWFTZGs6IENvbnN0cnVjdG9yT2Y8U2RrPixcbiAgICBjb25maWd1cmF0aW9uOiBTZGtDb25maWd1cmF0aW9uLFxuKTogQ29uc3RydWN0b3JPZjxTZGs+IHtcbiAgICBPYmplY3QuYXNzaWduKFNka0NvbmZpZ3VyYXRpb24sIGNvbmZpZ3VyYXRpb24pO1xuICAgIHJldHVybiBJY2V0ZWFTZGs7XG59XG4iXX0=
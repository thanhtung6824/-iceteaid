{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/src/api/auth/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,GAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,OAAA,GAAA;;AA0CC;;AAzCU,EAAA,OAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,YAAf,EAAqC,OAArC,EAAoD;AAChD,QAAI,CAAC,YAAL,EAAmB;AACf,YAAM,GAAA,CAAA,gBAAA,CAAiB,gBAAjB,CAAN;AACH;;AACD,QAAI,CAAC,OAAL,EAAc;AACV,YAAM,GAAA,CAAA,gBAAA,CAAiB,SAAjB,CAAN;AACH;;AACD,QAAM,OAAO,GAAG,GAAA,CAAA,YAAA,CAAa,eAAA,CAAA,WAAA,CAAY,QAAzB,EAAmC;AAAE,MAAA,YAAY,EAAA,YAAd;AAAgB,MAAA,OAAO,EAAA;AAAvB,KAAnC,CAAhB;;AACA,WAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,MAA3B,EAAmC,OAAnC,CAAP;AACH,GATM;;AAWA,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,YAAjB,EAAuC,OAAvC,EAAwD,UAAxD,EAA0E;AACtE,QAAI,CAAC,YAAL,EAAmB;AACf,YAAM,GAAA,CAAA,gBAAA,CAAiB,gBAAjB,CAAN;AACH;;AACD,QAAI,CAAC,OAAL,EAAc;AACV,YAAM,GAAA,CAAA,gBAAA,CAAiB,SAAjB,CAAN;AACH;;AACD,QAAM,OAAO,GAAG,GAAA,CAAA,YAAA,CAAa,eAAA,CAAA,WAAA,CAAY,UAAzB,EAAqC;AAAE,MAAA,YAAY,EAAA,YAAd;AAAgB,MAAA,OAAO,EAAA,OAAvB;AAAyB,MAAA,UAAU,EAAA;AAAnC,KAArC,CAAhB;;AACA,WAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,MAA3B,EAAmC,OAAnC,CAAP;AACH,GATM;;AAYA,EAAA,OAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,WAAvB,EAA0C;AACtC,QAAI,GAAA,CAAA,gBAAA,CAAiB,MAAjB,KAA4B,cAA5B,IAA8C,WAAlD,EAA+D;AAC3D,YAAM,GAAA,CAAA,gBAAA,CAAiB,cAAjB,CAAN;AACH;;AACD,QAAI,GAAA,CAAA,gBAAA,CAAiB,MAAjB,KAA4B,cAA5B,IAA8C,CAAC,WAAnD,EAAgE;AAC5D,UAAM,OAAO,GAAG,GAAA,CAAA,YAAA,CAAa,eAAA,CAAA,WAAA,CAAY,iBAAzB,EAA4C,EAA5C,CAAhB;;AACA,aAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,MAA3B,EAAmC,OAAnC,CAAP;AACH;;AACD,QAAI,CAAC,WAAL,EAAkB;AACd,YAAM,GAAA,CAAA,gBAAA,CAAiB,cAAjB,CAAN;AACH;;AACD,IAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,mDAAiD,KAAK,QAAL,CAAc,KAA/D,GAAoE,eAApE,GAAoF,WAA3G;AACH,GAZM;;AAcA,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,QAAM,OAAO,GAAG,GAAA,CAAA,YAAA,CAAa,eAAA,CAAA,WAAA,CAAY,OAAzB,EAAkC,EAAlC,CAAhB;;AACA,WAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,MAA3B,EAAmC,OAAnC,CAAP;AACH,GAHM;;AAIX,SAAA,OAAA;AAAC,CA1CD,CAA6B,UAAA,CAAA,OAA7B,CAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourcesContent":["import { BaseApi } from '../base-api';\nimport { invalidParameter, missingParameter, queryBuilder, SdkConfiguration } from '../..';\nimport { RequestType, ReturnType } from 'iceteaid-type';\n\nexport class AuthApi extends BaseApi {\n    public sendOtp(emailOrPhone: string, channel: string): ReturnType<any> {\n        if (!emailOrPhone) {\n            throw missingParameter('EMAIL_OR_PHONE');\n        }\n        if (!channel) {\n            throw missingParameter('CHANNEL');\n        }\n        const payload = queryBuilder(RequestType.SEND_OTP, { emailOrPhone, channel });\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public verifyOtp(emailOrPhone: string, channel: string, verifyCode: string): ReturnType<any> {\n        if (!emailOrPhone) {\n            throw missingParameter('EMAIL_OR_PHONE');\n        }\n        if (!channel) {\n            throw missingParameter('CHANNEL');\n        }\n        const payload = queryBuilder(RequestType.VERIFY_OTP, { emailOrPhone, channel, verifyCode });\n        return this.transporter.post(this.iframe, payload);\n    }\n\n    public loginWithGoogle(redirectUri?: string): Promise<any>;\n    public loginWithGoogle(redirectUri: string): ReturnType<any> | void {\n        if (SdkConfiguration.target === 'react-native' && redirectUri) {\n            throw invalidParameter('REDIRECT_URI');\n        }\n        if (SdkConfiguration.target === 'react-native' && !redirectUri) {\n            const payload = queryBuilder(RequestType.LOGIN_WITH_GOOGLE, {});\n            return this.transporter.post(this.iframe, payload);\n        }\n        if (!redirectUri) {\n            throw missingParameter('REDIRECT_URI');\n        }\n        window.location.href = `http://3k1.theydont.work/account/google?sdkId=${this.iceteaId.sdkId}&redirectUri=${redirectUri}`;\n    }\n\n    public logout(): ReturnType<any> {\n        const payload = queryBuilder(RequestType.LOG_OUT, {});\n        return this.transporter.post(this.iframe, payload);\n    }\n}"]}
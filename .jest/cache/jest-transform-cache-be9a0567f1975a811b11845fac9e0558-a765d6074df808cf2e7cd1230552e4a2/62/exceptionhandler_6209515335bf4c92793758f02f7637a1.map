{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/src/provider/exception-handler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAClC,WAAA,gBAAA,CAAY,IAAZ,EAAiC,OAAjC,EAAgD;AAAhD,QAAA,KAAA,GAEI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAO,sBAAoB,IAApB,GAAwB,IAAxB,GAA6B,OAApC,KAA8C,IAFlD,CAAgD,CAI5C;;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,gBAAgB,CAAC,SAA7C;;AACH;;AACL,SAAA,gBAAA;AAAC,CARD,CAAsC,KAAtC,CAAA;;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAUb,SAAgB,kBAAhB,GAAkC;AAC9B,SAAO,IAAI,gBAAJ,CACH,eAAA,CAAA,aAAA,CAAc,eADX,EAEH,4BAFG,CAAP;AAIH;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOA,SAAgB,gBAAhB,CAAiC,KAAjC,EAA8C;AAC1C,SAAO,IAAI,gBAAJ,CACH,eAAA,CAAA,aAAA,CAAc,iBADX,EAEH,eAAa,KAAb,GAAkB,cAFf,CAAP;AAIH;;AALD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAOA,SAAgB,gBAAhB,CAAiC,KAAjC,EAA8C;AAC1C,SAAO,IAAI,gBAAJ,CACH,eAAA,CAAA,aAAA,CAAc,iBADX,EAEH,eAAa,KAAb,GAAkB,aAFf,CAAP;AAIH;;AALD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAOA,SAAgB,cAAhB,GAA8B;AAC1B,SAAO,IAAI,gBAAJ,CACH,eAAA,CAAA,aAAA,CAAc,cADX,EAEH,mBAFG,CAAP;AAIH;;AALD,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { ExceptionType } from 'iceteaid-type';\n\nexport class ExceptionHandler extends Error {\n    constructor(code: ExceptionType, message: string) {\n\n        super (`IceteaID Error: [${code}] ${message}`);\n\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ExceptionHandler.prototype);\n    }\n}\n\nexport function missingApiKeyError(): ExceptionHandler {\n    return new ExceptionHandler(\n        ExceptionType.MISSING_API_KEY,\n        'You must provide a api key'\n    );\n}\n\nexport function missingParameter(param: string): ExceptionHandler {\n    return new ExceptionHandler(\n        ExceptionType.MISSING_PARAMETER,\n        `Parameter ${param} is required`\n    );\n}\n\nexport function invalidParameter(param: string): ExceptionHandler {\n    return new ExceptionHandler(\n        ExceptionType.INVALID_PARAMETER,\n        `Parameter ${param} is invalid`\n    );\n}\n\nexport function viewIsNotReady(): ExceptionHandler {\n    return new ExceptionHandler(\n        ExceptionType.VIEW_NOT_READY,\n        'View is not ready'\n    );\n}"]}
{"version":3,"sources":["/home/admin1/Desktop/@iceteaid/packages/core/test/provider/sdk.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { TestSdk } from '../mocks';\nimport { UserApi } from '../../src/api/user';\nimport { AuthApi } from '../../src/api/auth';\nimport { TestIframe, TestTransporter } from '../mocks';\n\ndescribe('Initialize IceteaId', () => {\n    it ('Get instance will return instance if it set', () => {\n        expect((TestSdk as any).instance).not.toBeDefined();\n        const testSdk = (TestSdk as any).getInstance('xxx');\n        expect(testSdk).toBeInstanceOf(TestSdk);\n        expect((TestSdk as any).instance).toBeInstanceOf(TestSdk);\n    });\n\n    it ('Initialize correctly', () => {\n        const testSdk = new TestSdk('xxx');\n        const expectedSdkId = {\n            apiKey: 'xxx',\n            target: 'web',\n            baseUrl: 'http://3k.theydont.work',\n        };\n        expect(JSON.stringify(expectedSdkId)).toBe(atob(testSdk.sdkId));\n        expect(testSdk.user).toBeInstanceOf(UserApi);\n        expect(testSdk.auth).toBeInstanceOf(AuthApi);\n        expect((TestSdk as any).getInstance('xxx')).toBeInstanceOf(TestSdk);\n        expect(testSdk.iframe).toBeInstanceOf(TestIframe);\n        expect(testSdk.transporter).toBeInstanceOf(TestTransporter);\n    });\n\n\n    it('Initialize without apikey will throw err', () => {\n        try {\n            new TestSdk();\n            expect(true).toBe(false);\n        } catch (err) {\n            expect(err.message).toBe('IceteaID Error: [MISSING_API_KEY] You must provide a api key');\n            expect(err).toBeInstanceOf(Error);\n        }\n    });\n\n    it('Is same instance between each call', () => {\n        const testSdk = new TestSdk('xxx');\n        const testSdk2 = new TestSdk('aaa');\n        const testSdk3 = new TestSdk('xxx');\n\n        expect(testSdk.iframe).toBe(testSdk3.iframe);\n        expect(testSdk.iframe).not.toBe(testSdk2.iframe);\n\n        expect(testSdk.transporter).toBe(testSdk3.transporter);\n        expect(testSdk.transporter).not.toBe(testSdk2.transporter);\n    });\n});\n\n"]}